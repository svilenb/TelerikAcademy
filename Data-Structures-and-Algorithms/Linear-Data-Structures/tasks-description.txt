4. Write a method that finds the longest subsequence
of equal numbers in given List<int> and returns
the result as new List<int>. Write a program to
test whether the method works correctly.
9. We are given the following sequence:
S1 = N;
S2 = S1 + 1;
S3 = 2*S1 + 1;
S4 = S1 + 2;
S5 = S2 + 1;
S6 = 2*S2 + 1;
S7 = S2 + 2;
...
Using the Queue<T> class write a program to print
its first 50 members for given N.
Example: N=2 -> 2, 3, 5, 4, 4, 7, 5, 6, 11, 7, 5, 9, 6, ...

11. Implement the data structure linked list. Define a
class ListItem<T> that has two fields: value (of
type T) and NextItem (of type ListItem<T>).
Define additionally a class LinkedList<T> with a
single field FirstElement (of type ListItem<T>).
12. Implement the ADT stack as auto-resizable array.
Resize the capacity on demand (when no space is
available to add / insert a new element).
13. Implement the ADT queue as dynamic linked list.
Use generics (LinkedQueue<T>) to allow storing
different data types in the queue.